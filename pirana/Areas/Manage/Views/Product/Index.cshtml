
@{
    ViewData["Title"] = "Index";
}
@model PaginateVM<Product>
<div class="table-responsive">
                    <table class="table">
                      <thead>
                        <tr>
                          <th>Id</th>
                          <th>Cover Image</th>
                          <th>Name</th>
                          <th>Description</th>
                          <th>CostPrice</th>
                          <th>SellPrice</th>
                          <th>SKU</th>
                          <th>Discount</th>
                          <th>Status</th>
                          <th>Category</th>
                          <th>Colors</th>
                          <th>Sizes</th>
                          <th colspan="2">Action</th>
                        </tr>
                      </thead>
                      <tbody>
                    @foreach (var item in Model.Items)
                    {   
                        <tr>
                            <td>@item.Id</td>
                            <td><img width="40" src="~/assets/images/product/@item?.ProductImages.FirstOrDefault(pi=>pi.IsCover==true)?.ImgUrl"></td>
                            <td>@item.Name</td>
                            <td>@item.Description</td>
                            <td>@item.CostPrice $</td>
                            <td>@item.SellPrice $</td>
                            <td>@item.SKU</td>
                            <td>@item.Discount</td>
                            <td>@item.IsDeleted</td>
                                <td>
                                @foreach (var category in item?.ProductCategories.Where(pc => pc.ProductId == item.Id))
                                {
                                    <span>@category.Category.Name</span>
                                }        
                                </td>
                                <td>
                                @foreach (var color in item?.ProductColors.Where(pc => pc.ProductId == item.Id))
                                {
                                    <span>@color.Color.Name</span>
                                }        
                                </td>
                                <td>
                                @foreach (var size in item?.ProductSizes.Where(ps => ps.ProductId == item.Id))
                                {
                                    <span>@size.Size.Name</span>
                                }        
                                </td>
                            <td><a type="button" class="btn btn-dark" asp-area="Manage" asp-controller="Product" asp-action="Delete" asp-route-id="@item.Id">Delete</a></td>
                            <td><a type="button" class="btn btn-success"  asp-area="Manage" asp-controller="Product" asp-action="Update" asp-route-id="@item.Id">Update</a></td>
                        </tr>
                    }   
                      </tbody>  
                    </table>
                  <nav class="mt-2" aria-label="...">
                  <ul class="pagination">
                      @if(Model.PageMaxCount>1){
                    <li class="page-item disabled">
                      <a class="page-link" asp-action="Index" asp-route-page=(@Model.CurrentPage-1) >Previous</a>
                    </li>
                      }
                      @for (int i = 1; i <= Model.PageMaxCount; i++)
                     {
                        <li class="page-item active" aria-current="page">
                          <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                        </li>
                     }
                    @if(Model.CurrentPage<Model.PageMaxCount)
                    {
                        <li class="page-item">
                          <a class="page-link" asp-action="Index" asp-route-page="@Model.CurrentPage+1" >Next</a>
                        </li>
                    }
                  </ul>
                </nav>
                  </div>

